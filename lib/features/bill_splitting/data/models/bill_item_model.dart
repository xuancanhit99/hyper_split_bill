import 'package:hyper_split_bill/features/bill_splitting/domain/entities/bill_item_entity.dart';

// Data Transfer Object (DTO) or Model for Bill Item data.
class BillItemModel extends BillItemEntity {
  const BillItemModel({
    super.id, // ID might be null when creating
    required super.description,
    required super.quantity,
    required super.unitPrice,
    required super.totalPrice,
  });

  factory BillItemModel.fromEntity(BillItemEntity entity) {
    return BillItemModel(
      id: entity.id,
      description: entity.description,
      quantity: entity.quantity,
      unitPrice: entity.unitPrice,
      totalPrice: entity.totalPrice,
    );
  }

  factory BillItemModel.fromMap(Map<String, dynamic> map) {
    if (map['description'] == null || map['total_price'] == null) {
      throw ArgumentError(
          'Missing required fields in BillItemModel.fromMap: $map');
    }
    return BillItemModel(
      id: map['id'] as String?, // ID from DB
      description: map['description'] as String,
      quantity: (map['quantity'] as num?)?.toInt() ?? 1,
      unitPrice: (map['unit_price'] as num?)?.toDouble() ??
          0.0, // Handle potential null
      totalPrice: (map['total_price'] as num).toDouble(),
    );
  }

  Map<String, dynamic> toMap({required String billId, required String userId}) {
    return {
      // 'id' is excluded on insert, generated by DB
      'bill_id': billId,
      'user_id': userId,
      'description': description,
      'quantity': quantity,
      'unit_price': unitPrice,
      'total_price': totalPrice,
    };
  }
}
